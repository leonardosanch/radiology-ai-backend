version: "3.8"

services:
  radiology-ai-backend:
    build: .
    container_name: radiology-ai-backend
    ports:
      - "8002:8002"
    environment:
      - HOST=0.0.0.0
      - PORT=8002
      - DEBUG=true
      # Variables críticas para TorchXRayVision
      - TORCHXRAYVISION_CACHE_DIR=/app/models/torchxrayvision
      - XDG_CACHE_HOME=/app/.cache
      - HOME=/app
      # Variables de usuario (comentadas para máxima compatibilidad)
      # - PUID=1000
      # - PGID=1000
    volumes:
      # Volúmenes para persistencia de datos
      - ./uploads:/app/uploads
      - ./models:/app/models
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./cache:/app/cache
      # Archivo de configuración
      - ./.env:/app/.env:ro
    networks:
      - radiology-network
    restart: unless-stopped
    # Usuario comentado para evitar problemas de permisos
    # user: "${UID:-1000}:${GID:-1000}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radiology-ai.rule=Host(`localhost`)"
      - "traefik.http.routers.radiology-ai.service=radiology-ai"
      - "traefik.http.services.radiology-ai.loadbalancer.server.port=8002"

  redis:
    image: redis:7-alpine
    container_name: radiology-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - radiology-network
    restart: unless-stopped
    command: redis-server --appendonly yes

networks:
  radiology-network:
    driver: bridge

volumes:
  redis_data:
